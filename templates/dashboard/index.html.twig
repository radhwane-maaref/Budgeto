{% extends 'base.html.twig' %}

{% block title %}Dashboard | Budgeto
{% endblock %}

{% block body %}
	<div class="row mb-4">
		<div class="col-md-4">
			<div class="card text-white bg-success shadow-sm rounded-3">
				<div class="card-body">
					<h5 class="card-title">
						<i class="fas fa-wallet"></i>
						Total Income</h5>
					<p class="fs-4">{{ totalIncome|number_format(2, '.', ',') }}
						DT</p>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="card text-white bg-danger shadow-sm rounded-3">
				<div class="card-body">
					<h5 class="card-title">
						<i class="fas fa-credit-card"></i>
						Total Expenses</h5>
					<p class="fs-4">{{ totalExpenses|number_format(2, '.', ',') }}
						DT</p>
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="card text-white bg-primary shadow-sm rounded-3">
				<div class="card-body">
					<h5 class="card-title">
						<i class="fas fa-balance-scale"></i>
						Balance</h5>
					<p class="fs-4">{{ balance|number_format(2, '.', ',') }}
						DT</p>
				</div>
			</div>
		</div>
	</div>

	{# === Saving Goals Section === #}
	{% if savingGoals is not empty %}
		<div class="row mb-5">
			<div class="col-lg-12">
				<h4 class="mb-3">
					<i class="fas fa-piggy-bank"></i>
					Recent Saving Goals</h4>
				<div class="row">
					{% for goal in savingGoals|slice(0, 3) %}
						<div class="col-md-6 col-lg-4 mb-3">
							<div class="card shadow-sm border-success h-100">
								<div class="card-body d-flex flex-column">
									<h5 class="card-title">{{ goal.title }}</h5>
									<p class="mb-1">
										<strong>Target:</strong>
										{{ goal.targetAmount|number_format(2, '.', ',') }}
										DT</p>
									<p class="mb-1">
										<strong>Saved:</strong>
										{{ goal.currentAmount|number_format(2, '.', ',') }}
										DT</p>
									{% if goal.deadline %}
										<p class="mb-1 text-muted">
											<i class="fas fa-calendar-alt"></i>
											Due:
											{{ goal.deadline|date('Y-m-d') }}
										</p>
									{% endif %}
									{% set progress = (goal.currentAmount / goal.targetAmount * 100)|round(0, 'floor') %}
									<div class="progress mt-2" style="height: 10px;">
										<div class="progress-bar bg-success" role="progressbar" style="width: {{ progress }}%;" aria-valuenow="{{ progress }}" aria-valuemin="0" aria-valuemax="100"></div>
									</div>
									<small class="text-muted mt-1">{{ progress }}% achieved</small>
								</div>
							</div>
						</div>
					{% endfor %}
				</div>
			</div>
		</div>
	{% endif %}


	<div class="row mb-5">
		<div class="col-lg-12">
			<h4 class="mb-3">
				<i class="fas fa-list"></i>
				Recent Expenses</h4>
			<div class="table-responsive mb-4">
				<table class="table table-hover align-middle">
					<thead class="table-light">
						<tr>
							<th scope="col">Date</th>
							<th scope="col">Category</th>
							<th scope="col">Amount</th>
							<th scope="col">Description</th>
						</tr>
					</thead>
					<tbody>
						{% for expense in expenses %}
							<tr>
								<td>{{ expense.date|date('Y-m-d') }}</td>
								<td>{{ expense.category.name }}</td>
								<td>{{ expense.amount|number_format(2, '.', ',') }}
									DT</td>
								<td>{{ expense.description }}</td>
							</tr>
						{% else %}
							<tr>
								<td colspan="4" class="text-muted text-center">No recent expenses found.</td>
							</tr>
						{% endfor %}
					</tbody>
				</table>
			</div>

			<h4 class="mb-3">
				<i class="fas fa-chart-pie"></i>
				Expenses by Category</h4>
			<div class="d-flex justify-content-center mb-5">
				<div style="width: 400px;">
					<canvas id="expenseChart" height="200"></canvas>
				</div>
			</div>
		</div>
	</div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {# load Chart.js with defer so itâ€™s parsed before our init code #}
    <script src="https://cdn.jsdelivr.net/npm/chart.js" defer></script>
    <script>
      // wrap chart-creation in a function
      function renderExpenseChart() {
        const ctx = document.getElementById('expenseChart');
        if (!ctx) return;

        new Chart(ctx, {
          type: 'pie',
          data: {
            labels: {{ categories|map(c => c.category)|json_encode|raw }},
            datasets: [{
              label: 'Total per category',
              data: {{ categories|map(c => c.total)|json_encode|raw }},
              backgroundColor: [
                '#FF6384', '#36A2EB', '#FFCE56',
                '#4BC0C0', '#9966FF', '#FF9F40'
              ],
              borderWidth: 1
            }]
          },
          options: {
            responsive: true,
            plugins: {
              legend: { position: 'bottom' }
            }
          }
        });
      }

      // call on both initial load and turbo navigations
      document.addEventListener('DOMContentLoaded', renderExpenseChart);
      document.addEventListener('turbo:load',       renderExpenseChart);
    </script>
{% endblock %}
